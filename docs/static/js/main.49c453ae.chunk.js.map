{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifts.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","includes","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGift","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACwB,KAAtBJ,EAAWK,QAAeP,GAAc,SAAAQ,GAC1C,OAAKA,EAAWC,SAASP,GAClBM,EADqC,CAAEN,GAAR,mBAAuBM,SAO7D,2BAAOE,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCJdG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,yBAAKC,UAAW,0CACZ,2BAAIF,GACJ,yBAAKG,IAAMF,EAAKG,IAAMJ,M,uBCNrBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDAE2BO,UAAUF,GAFrC,+DAGIG,MAAMR,GAHV,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAYZY,GAZY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OARAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAC,GACnBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGhB,CAACb,IACGc,EDV6BK,CAAanB,GAAjCU,EADuB,EAC7BJ,KAAcO,EADe,EACfA,QAEtB,OACI,oCACI,wBAAIjB,UAAU,qCAAqCI,GACnD,yBAAKJ,UAAU,aACViB,EAAU,uBAAGjB,UAAU,oCAAb,YAA+Dc,EAAOF,KAAI,SAACC,GAAD,OAAS,kBAAC,EAAD,iBAAiBA,EAAjB,CAAsBW,IAAKX,EAAIhB,YEPhI4B,EAAe,WAAO,IAAD,EACI1C,mBAAS,CAAC,qBADd,mBACzBO,EADyB,KACbR,EADa,KAKhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACGQ,EAAWsB,KAAI,SAACR,EAAUsB,GAAX,OACd,kBAAC,EAAD,CAASF,IAAKpB,EAAWsB,EAAOtB,SAAUA,UCXpDuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.49c453ae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim() !== '') setCategories(categories => {\n      if (!categories.includes(inputValue)) return [inputValue, ...categories]\n      return categories\n\n    })\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className= 'card animate__animated animate__bounce'>\n            <p>{title}</p>\n            <img src= {url} alt= {title}></img>\n            \n            \n        </div>\n    )\n}\n","export const getGift = async (category) => {\n    const url =\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZwhbIt1BOF3y8vat7Wif3sJRk5zY5k7s`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url,\n        };\n    });\n    return gifs;\n};","import React from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({ category }) => {\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            <div className='card-grid'>\n                {loading ? <p className=\"animate__animated animate__flash\">cargando</p> : images.map((img) => <GifGridItem {...img} key={img.id} />)}\n            </div>\n        </>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGift } from \"../helpers/getGifts\";\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGift(category).then(imgs =>{\n        setState({\n            data: imgs,\n            loading: false\n        });\n    });\n  }, [category]);\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"League of Legend\"]);\n  // const handleAdd = () => {\n  //     setCategories([...categories, 'Superman'])\n  // }\n  return (\n    <>\n      <h2>gifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n      <ol>\n        {categories.map((category, index) => (\n          <GifGrid key={category + index} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}